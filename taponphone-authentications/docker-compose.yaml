version: '2.4'
name: taponphone-authentications
networks:
  taponphone-authentications:
volumes:
  taponphone-authentications-postgres:
services:
  taponphone-authentications:
    build:
      context: .
      no_cache: true
    image: taponphone-authentications:1
    environment:
      - TZ=America/Sao_Paulo
      - SPRING_DISTRIBUTED_TRACING_ZIPKIN_ENDPONT=http://taponphone-authentications-zipkin:9411/api/v2/spans
      - SPRING_DATASOURCE_URL=jdbc:postgresql://taponphone-authentications-postgres:5432/taponphone-authentications?user=postgres&password=postgres
    networks:
      - taponphone-authentications
    ports:
      - 8080:8080
    depends_on:
      taponphone-authentications-zipkin:
        condition: service_healthy
      taponphone-authentications-postgres:
        condition: service_healthy
    healthcheck:
      test: wget http://localhost:8080/actuator/health/readiness -O - | grep UP || exit 1
  taponphone-authentications-zipkin:
    image: openzipkin/zipkin:2
    environment:
      - TZ=America/Sao_Paulo
      - STORAGE_TYPE=mem
    networks:
      - taponphone-authentications
    ports:
      - 9411:9411
    healthcheck:
      test: wget http://localhost:9411/health -O - | sed ':a;N;$!ba;s/\s//g' | grep 'zipkin":{"status":"UP' || exit 1
  taponphone-authentications-postgres:
    image: postgres:16-alpine
    environment:
      - TZ=America/Sao_Paulo
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=taponphone-authentications
    networks:
      - taponphone-authentications
    volumes:
      - taponphone-authentications-postgres:/var/lib/postgresql
    healthcheck:
      test: pg_isready -U postgres
    restart: always
